{
  "hash": "43449a55a577c74455daaf908c170f23",
  "result": {
    "markdown": "---\ntitle: \"Summarizing Data Tutorial - Louisiana Mortality File\"\nsummary: >-\n  Refine an analytic sample from the Louisiana mortality files.\ntbl-cap-location: bottom\n---\n\n\n## Refining our Analyic Sample\n\nIn the previous tutorial, we calculated crude cancer mortality rates across Louisiana parishes from 2005 through 2019. Now we'll .... \n\nLet's start by opening the .Rproj file in your `hpam7660_Cancer_Alley` folder. Then open the Markdown document you used in the previous tutorial to create the analytic sample. We can continue working off of this same Markdown document as we refine our sample.\n\n### Age-Adjusted Cancer Mortality Rates\n\nThe first step in refining our analytic sample is to calculate age-adjusted cancer mortality rates by parish. It's important to age-adjust our mortality rates because different parishes have different age profiles and that could bias our estimated rates. For example, suppose that parish A has a relatively high proportion of older people and parish B has a relatively high proportion of younger people. Crude cancer mortality rates would likely show high rates among parish A. However, this may not be the case once we account for the fact that the older population in parish A is more prone to cancer.\n\nTo calculate age-adjusted cancer mortality rates, the first thing we need to do is generate cancer death counts by parish and year for each age group in our data. Start by reading in the raw Louisiana cancer mortality file (you may be able to skip this step if the `la_mort` data frame is still loaded in your environment).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nla_mort <- \n  read_csv(\"https://www.dropbox.com/scl/fi/fzsnhfd3lq80v2o3sag6c/la_mort.csv?rlkey=h1vyjm2b8ppgejgsg3e8evm7i&dl=1\")\n```\n:::\n\n\nWe now need to repeat a couple of steps that we've seen before. First, we'll create an indicator for whether a parish is in Cancer Alley:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nla_mort$cancer_parish <- ifelse(la_mort$cntyrsd %in% c(5, 33, 47, 51, 71, 89, 93, 95, 121), 1, 0)\n```\n:::\n\n\nThen we'll create an indicator for a cancer death:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nla_mort$cancer39 <- ifelse(la_mort$ucr39 %in% c(5:15), 1, 0)\n```\n:::\n\n\nNext, we need to aggregate to the parish level like we did before, but with one important difference - we need to create age-specific counts of parish-level cancer deaths. To do so, we need to assign people in the mortality file to these age groups using the `age` variable. But remember, the `age` variable in the mortality file uses some strange values (refer to the codebook you created for specifics). First we'll need to replace values of the `age` variable with age in years. Use the following code to do so:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nla_mort_age <- la_mort %>%\n  filter(age != 9999)\nla_mort_age$age <- ifelse(la_mort_age$age < 2000, la_mort_age$age - 1000, 0)\n```\n:::\n\n\nThere are a few people for whom age in the `la_mort` file is missing and coded 9999. First, we're dropping those people from the data by creating a new data frame called `la_mort_age` where anyone with an age equal to 9999 is excluded. The next line tells R to replace the `age` variable with values equal to the current value minus 1000 if the current value is less than 2000. Remember that a leading digit of 1 in this variable indicates that age is recorded in years and the remaining three digits are age in years. So by subtracting 1000, we're left with age in years for those whose age was recorded in years (confusing I know!). Everyone with a leading digit between 2 and 9 died before they turned 1 year old and so their age is measured in months, days, etc. Here we're telling R to change all those values to 0 since we only want age measured in years.\n\nNow that we have the ages for all individuals in our data represented as age in years, we can categorize ages based on the categories available in the denominator file, which are as follows: \n\n0 to 4\n5 to 9\n10 to 14\n15 to 19\n20 to 24\n25 to 29\n30 to 34\n35 to 39\n40 to 44\n45 to 49\n50 to 54\n55 to 59\n60 to 64\n65 to 69\n70 to 74\n75 to 79\n80 to 84\n85 and above\n\nHere's the R code that will allow us to do that:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_breaks <- c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, Inf)\nage_labels <- c(\"0_4\", \"5_9\", \"10_14\", \"15_19\", \"20_24\", \"25_29\", \"30_34\", \"35_39\", \n                \"40_44\", \"45_49\", \"50_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \n                \"75_79\", \"80_84\", \"85+\")\nla_mort_age$agegrp <- as.character(cut(la_mort_age$age, breaks = age_breaks, labels = age_labels, right = FALSE))\n```\n:::\n\n\nThe first line in this code is telling R to define a vector called `age_breaks` where the \"break\" corresponds to the lower bound for each age group (e.g., 0 for 0 to 4, 5 for 5 to 9, etc.). The second line is defining values for each age category. Note that I've defined these values so that they correspond exactly to the values in the denominator file (`la_pop`). Finally, the third line is creating a new variable in the `la_mort_age` data frame called `agegrp` using the `cut` function that categorizes the numerical `age` variable into discrete intervals. Here, the discrete intervals are defined by the values in the `age_breaks` vector and labeled using the values in the `age_labels` vector. The `right = FALSE` option tells R to exclude the next break age from the current age interval (e.g., exclude 5 from the 0-5 interval, exclude 10 from the 5-10 interval, and so on). Also, note that I called this new variable `agegrp` and created it as a character variable so that it would match the name and variable type of the `agegrp` variable in the `la_pop` data. This is because we'll use `agegrp` as a key variable when we're joining the two data frames. \n\n### Aggregating to the Parish Level\n\nLast time, when we aggregated to the parish level, we used the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparish_count <- la_mort %>%\n  group_by(cntyrsd, cancer_parish, year) %>%\n  summarize(cancer39 = sum(cancer39, na.rm = TRUE))\n```\n:::\n\n\nIf you remember, this code created a data frame that included the overall count of cancer deaths by parish and year, but did not differentiate by age. Let's modify this code so that we aggregate to the parish-age group-year level instead of just the parish-year level. To do so, we'll just need to add `agegrp` to our `group_by` function:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nparish_count_age <- la_mort_age %>%\n  group_by(cntyrsd, cancer_parish, agegrp, year) %>%\n  summarize(cancer39 = sum(cancer39, na.rm = TRUE))\n```\n:::\n\n\nAfter running this, you should see that the `parish_count_age` data frame contains counts of cancer deaths for each age category we defined above at the parish-year level. \n\n### Merging Population Data\n\nNow it's time to join the `parish_count_age` data frame that we just created with the `la_pop` data frame that contains our population denominators. First, load the `la_pop` data if it's not already in your project environment:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nla_pop <- \n  read_csv(\"https://www.dropbox.com/scl/fi/650k1obpczky6bwa19ex6/la_county_pop.csv?rlkey=0aokd9m76q7mxwus97uslsx7g&dl=1\")\n```\n:::\n\n\nRemember that last time, we changed the key variable names in the the cancer count data to match the names in the population data (e.g., `cntyrsd` became `county`). This time, we'll run the join with the different key variable names so you can see what that looks like.\n\nHere's the code we used last time to do the join:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nla_joined <- parish_count %>%\n  inner_join(la_pop, by = c(\"county\", \"year\"))\n```\n:::\n\n\nWe'll modify that code this time to account for the different key variable names (`cntyrsd` and `county`) and because we now have a new key variable to include: `agegrp`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nla_joined <- parish_count_age %>%\n  inner_join(la_pop, by = c(\"cntyrsd\" = \"county\", \"year\", \"agegrp\"))\n```\n:::\n\n\nThis code tells R that we want to create a new data frame called `la_joined` that is formed using an `inner_join` on the `parish_count_age` and `la_pop` data frames. They key variables for R to join on are county (which is called `cntyrsd` in the `parish_count_age` data frame and called `county` in the `la_pop` data frame), year, and age group.\n\nIf you take a look at the new `la_joined` data frame, you'll see that we have cancer death counts and population counts for each age in each parish-year. We also have population counts by age-race-ethnicity, which we'll use later on. \n\n### Calculating Age-Adjusted Cancer Mortality Rates\n\nThe process of age-adjusting parish cancer mortality rates consists of standardizing age distributions so that when comparing cancer mortality across parish or over time, we're comparing mortality rates for people who are the \"same age\" (in a statistical sense). Standardizing age distributions involves choosing a reference population and calculating weighted mortality rates based on that population. Let's walk through how this is done.\n\n**STANDARD POPULATION**\n\nFirst we need to choose a standard population age distribution. Most commonly, people use the age distribution in the U.S. from at the time of the 2000 census.\n\n\n| Age             | 2000 U.S. Standard (in millions) |          \n|:----------------|:--------------------|\n| 0 to 4          |   69,135            |\n| 5 to 9          |   72,533            |\n| 10 to 14        |   73,032            |\n| 15 to 19        |   72,169            |\n| 20 to 24        |   66,478            |\n| 25 to 29        |   64,529            |\n| 30 to 34        |   71,044            |\n| 35 to 39        |   80,762            |\n| 40 to 44        |   81,851            |\n| 45 to 49        |   72,118            |\n| 50 to 54        |   62,716            |\n| 55 to 59        |   48,454            |\n| 60 to 64        |   38,793            |\n| 65 to 69        |   34,264            |\n| 70 to 74        |   31,773            |\n| 75 to 79        |   26,999            |\n| 80 to 84        |   17,842            |\n| 85+             |   15,508            |\n\n: *Source:* https://seer.cancer.gov/stdpopulations/stdpop.19ages.html\n\nHere's a .csv file of the standard population age distribution. Let's read it into R and join it with our `la_joined` data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstnrd_pop <- \n  read_csv(\"https://www.dropbox.com/scl/fi/xzd2o5lza237so6vamqwb/stnrd_pop.csv?rlkey=zp90au2tuq6eptvi1yiyjfzua&dl=1\")\nla_joined_stnrd <- la_joined %>%\n  inner_join(stnrd_pop, by = \"agegrp\")\n```\n:::\n\n\n\n\n\n\nWeight by parish population",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}