{
  "hash": "eb65f491b55d4a1078a6f58510cbb482",
  "result": {
    "markdown": "---\ntitle: \"Making Tables with STATA\"\nsummary: >-\n  Guide to exporting summary statistics and regression coefficients from STATA to LaTeX and Word\n---\n\n::: {.cell}\n\n:::\n\n\n## Exporting STATA Tables to LaTeX and Word\n\nThis guide will cover the basics of exporting summary statistics and regression coefficients from STATA to formatted tables in LaTeX and Word. Much of the information in this guide was drawn from Asjad Naqvi's \"[The Stata-to-LaTex guide](https://medium.com/p/6e7ed5622856)\" published on Medium. You can download a STATA .do file that contains all of the code I used to generate the table examples [here](/resources/table_examples.do). \n\n### The Setup\n\n*STATA*\n\nTo create LaTeX tables in STATA, you'll need to install the `estout` package.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nssc install estout, replace\n```\n:::\n\n\nIf you already have the `estout` package installed, make sure that you're using the latest version.\n\n*LaTeX*\n\nYou'll also need some way to compile LaTeX files. Overleaf is probably the most commonly used compiler, though you could also download a compiler, like TeXLive to your computer. I recommend Overleaf because it stores all of your projects online and makes for easy collaboration.\n\nYou'll need to add the following packages to your LaTeX preamble in order to compile the tables in this guide. These packages need to be added *in addition* to any other packages you need to compile your document.\n\n![](/img/latex_preamble.png){fig-alt=\"Latex Preamble\"}\n\n\n*Word*\n\nThere is no setup to do in Word. We'll export STATA tables to .rtf files and you can open these files directly in Word.\n\n### Summary Statistics Tables\n\nRun the following STATA code that will load an example data set, tabulate some basic summary statistics, and stores the results in STATA's `e()` matrices.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nsysuse census, clear\n  foreach i of varlist pop-popurban death-divorce {\n    replace `i' = `i' / 1000\n  }\n\nest clear\nestpost tabstat pop pop65p medage death marriage divorce, c(stat) stat(sum mean sd min max n)\n```\n:::\n\n\nNow we can use the `esttab` command, which is part of the `estout` package, to generate a summary statistics table. We'll start with a basic table and add additional elements as we go.\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_1.tex\", replace cells(\"sum mean sd min max count\") booktabs\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", replace /// \ncells(\"sum mean sd min max count\") title(\"Table 1: Summary statistics - Basic\")\n```\n:::\n\n\nYou should replace the \"~\" with your desired path for file storage. You'll probably want to set this path at the beginning of your .do file using a global. \n\nOnce you've generated the `table_1.tex` file, you can upload it into your Overleaf document and add the following code to display the table:\n\n![](/img/tab1a.png){fig-alt=\"table_1a\"}\n\nThis code tells LaTeX that we're placing a table in the document and that the table should use the `table_1.tex` file for its input. The `!htbp` command helps with table positioning. The exclamation point overrides some LaTeX defaults and may not be appropriate to use in all cases. If you're struggling to get the table to display in a proper position in the document, try removing the exclamation point. The `\\centering` command tells LaTeX to put the table in the center of the page and the `\\caption` command allows us to add a title to the table. Note that you could also add a title using the `title` option in STATA's `esttab` command. We'll do this for our Word tables, but when using LaTeX, it's better to add titles in the LaTeX document itself. Finally, the `label` command in LaTeX allows us to add a label to the table that we can reference throughout our LaTeX document. It's always better to refer to something like \"Table \\\\ref{tab:ss_basic}\" rather than \"Table 1\" in your LaTeX document. That way, if the table order changes, the table numbers in your document will update automatically.\n\nBy default, LaTeX will include the subsection number in the table number, so you'll get something like \"Table 1.1\". To drop the subsection number, you can add the following command to your LaTeX preamble: `\\renewcommand{\\thetable}{\\arabic{table}}`.\n\nYou'll see that this table contains the sum, mean, standard deviation, minimum, maximum, and observation count for six variables in the census data set. This looks pretty good, but there are some elements that aren't quite right. For example, the table has only one column number for six columns and it contains the number of observations as both a column and row at the bottom. We can clean this up by adding the following options to the `esttab` command in STATA:\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_2.tex\", replace cells(\"sum mean sd min max count\") /// \nbooktabs nonumber nomtitle nonote noobs compress label\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append /// \ncells(\"sum mean sd min max count\") title(\"Table 2: Summary statistics - Basic, Clean\") /// \nnonumber nomtitle nonote noobs compress label\n```\n:::\n\n\nAdd this new table to your LaTeX document like this:\n\n![](/img/tab1b.png){fig-alt=\"table_1b\"}\n\nThe `vspace{0.5in}` command adds a half inch of blank space between the two tables. It's not necessary, but makes things look better in this case.\n\nNote that for LaTeX, we're creating separate .tex files for Table 1 and Table 2, but for Word, we're creating one .rtf document called \"tables\" and appending Table 2 to Table 1. In LaTeX, you'll want separate files for each table, but that's not typically something that you'll want in Word. \n\nOur table is looking better now. We got rid of the column numbering and the extra observation count. But there are still improvements that we could make. For example, suppose that we don't need all these decimal places in each column. We can adjust that by formatting the column output in the `esttab` command as follows. Let's also clean up some of the column names while we're at it:\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_3.tex\", replace /// \ncells(\"sum(fmt(%8.0fc)) mean(fmt(%8.2fc)) sd(fmt(%8.2fc)) min max count\") /// \nbooktabs nonumber nomtitle nonote noobs compress label ///\ncollabels(\"Sum\" \"Mean\" \"SD\" \"Min\" \"Max\" \"Obs\")\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append /// \ncells(\"sum(fmt(%8.0fc)) mean(fmt(%8.2fc)) sd(fmt(%8.2fc)) min max count\") /// \ntitle(\"Table 3: Summary statistics - Basic, Formatted\") ///\nnonumber nomtitle nonote noobs compress label ///\ncollabels(\"Sum\" \"Mean\" \"SD\" \"Min\" \"Max\" \"Obs\")\n```\n:::\n\n\nThis looks good, but oftentimes we want summary statistics tables that compare characteristics for a treatment group and a control group. Run the following STATA code that designates certain states in the census data as \"treated\" states and the others as \"control states\".\n\n\n::: {.cell}\n\n```{.stata .cell-code}\ngen treat=1 if inlist(state, \"Louisiana\", \"Texas\", \"Arkansas\", \"Mississippi\")\nreplace treat=0 if treat==.\n```\n:::\n\n\nNow run the following `estpost` and modified `esttab` commands that will generate a treatment vs. control summary statistics table. Note that, for this table, we'll focus on the mean and the standard deviation of the variables of interest and present the information in the more standard format of estimate over the standard deviation.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nest clear\nestpost tabstat pop pop65p medage death marriage divorce, by(treat) c(stat) stat(mean sd) nototal\n```\n:::\n\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_4.tex\", replace /// \ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") /// \nbooktabs nonumber nomtitle nonote noobs compress label unstack gap ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\")\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append /// \ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") ///\ntitle(\"Table 4: Summary statistics - Treat vs. Control\") /// \nnonumber nomtitle nonote noobs compress label unstack gap ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\")\n```\n:::\n\n\nOne thing to note here is that we're using `eqlables` rather than `collabels` to add column labels. This is because when we use the `by()` option in the `estpost` command, the STATA output is stacked in one long column. We use the `unstack` option to split the summary statistics by treatment and control groups, and when we do this, STATA treats each column as an \"equation\". \n\nAnother thing to be aware of is that we're using the `sd(par)` option to put the standard errors in parentheses under the mean values. When we do this, any formatting that we use for the mean (e.g., %8.2fc) is passed on to the standard deviation unless we explicitly select a different formatting option for the standard deviation.  \n\nNow suppose we want to group our summary statistic variables into categories. In this case, we'll use two categories: *Demographics* and *Status*. To do this, we can modify the `esttab` code as follows:\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_5.tex\", replace ///\nrefcat(pop \"\\emph{Demographic}\" death \"\\vspace{0.1em} \\\\ \\emph{Status}\", nolabel) ///\ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") /// \nbooktabs nonumber nomtitle nonote noobs compress label unstack gap ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\")\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nrefcat(pop \"{\\i Demographic}\" death \"\\line {\\i Status}\", nolabel) ///\ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") ///\ntitle(\"Table 5: Summary statistics - Treat vs. Control, Grouped\") ///  \nnonumber nomtitle nonote noobs compress label unstack gap ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\")\n```\n:::\n\n\nThe key to adding the group names is the `refcat` command. The syntax requires us to tell LaTeX or Word the variable name that we want to be directly below the group name (e.g., pop for Demographic). The `\\vspace` command in LaTeX and the `\\line` command in Word allows us to control the space between the variable groupings in the table.\n\nThis looks pretty good, but the spaces between the variables in the table are a little large. We can fix that by replacing the `gaps` option with the `nogaps` option and re-running: \n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_6.tex\", replace ///\nrefcat(pop \"\\emph{Demographic}\" death \"\\vspace{0.1em} \\\\ \\emph{Status}\", nolabel) ///\ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") /// \nbooktabs nonumber nomtitle nonote noobs compress label unstack nogaps ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\")\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nrefcat(pop \"{\\i Demographic}\" death \"\\line {\\i Status}\", nolabel) ///\ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") ///\ntitle(\"Table 6: Summary statistics - Treat vs. Control, Spaced\") ///\nnonumber nomtitle nonote noobs compress label unstack nogaps ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\")\n```\n:::\n\n\nWe're getting pretty close to where we want to be with this table, but it would probably be helpful to readers if we added the number of observations in the treatment and control groups to the table. To do this, we need to save the number of observations for both the treatment and control groups in locals and include those local values in the `stats` option for `esttab`. Run the following STATA code (after the `estpost` command) and then see below for the `esttab` modifications:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\ncount if treat == 1\nestadd local treat_N = r(N)\ncount if treat == 0\nestadd local control_N = r(N)\n```\n:::\n\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_7.tex\", replace ///\nrefcat(pop \"\\emph{Demographic}\" death \"\\vspace{0.01in} \\\\ \\emph{Status}\", nolabel) ///\ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") /// \nbooktabs nonumber nomtitle nonote noobs compress label unstack nogaps  ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\") /// \nstats(treat_N control_N, layout(\"@ @\") labels(\"Observations\"))\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nrefcat(pop \"{\\i Demographic}\" death \"\\line {\\i Status}\", nolabel) ///\ncells(\"mean(fmt(%8.2fc))\" \"sd(par)\") ///\ntitle(\"Table 7: Summary statistics - Treat vs. Control, Obs\") /// \nnonumber nomtitle nonote noobs compress label unstack nogaps ///\ncollabels(none) eqlabels(\"Treatment\" \"Control\") /// \nstats(treat_N control_N, layout(\"@ @\") labels(\"Observations\"))\n```\n:::\n\n\nThis code counts the number of observations in the treatment group and stores that number in a local called \"treat_N\". It does the same thing for the control group and stores the result in a local called \"control_N\". We then use the `stats` option to include the observation values, the `layout` option to tell LaTeX or Word that we want these observation values to appear in the same row in the table (without this option, LaTeX or Word will put each value in a different row), and the `labels` option tells LaTeX or Word that we want to label this row \"Observations\".\n\nSometimes it's helpful to know whether differences in summary statistics across treatment and control groups are statistically different. We can check this by running a series of t-tests and adding the results to the table. This is going to take some extensive modifications to our current code because we'll need to use the `ttest` command instead of the `tabstat` command. This means we'll have to adjust some of our `esttab` code as a result. Run the following STATA code and then see below for the `esttab` modifications: \n\n\n::: {.cell}\n\n```{.stata .cell-code}\nglobal vars pop pop65p medage death marriage divorce\n\nest clear\nestpost ttest $vars, by(treat)\n\ncount if treat == 1\nestadd local treat_N = r(N)\ncount if treat == 0\nestadd local control_N = r(N)\n```\n:::\n\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_8.tex\", replace ///\nrefcat(pop \"\\emph{Demographic}\" death \"\\vspace{0.01in} \\\\ \\emph{Status}\", nolabel) ///\ncells(\"mu_1 mu_2 p(star)\") /// \nstar(* 0.50 ** 0.20 *** 0.10) ///\nbooktabs nonumber nomtitle nonote noobs compress label nogaps ///\ncollabels(\"Treatment\" \"Control\" \"\\shortstack{p-Value of\\\\Difference}\") /// \nstats(treat_N control_N, layout(\"@ @\") labels(\"Observations\"))\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nrefcat(pop \"{\\i Demographic}\" death \"\\line {\\i Status}\", nolabel) ///\ncells(\"mu_1 mu_2 p(star)\") /// \nstar(* 0.50 ** 0.20 *** 0.10) ///\ntitle(\"Table 8: Summary statistics - Treat vs. Control, t-test\") /// \nnonumber nomtitle nonote noobs compress label nogaps ///\ncollabels(\"Treatment\" \"Control\" \"p-Value of Difference\") /// \nstats(treat_N control_N, layout(\"@ @\") labels(\"Observations\"))\n```\n:::\n\n\nFirst, we're defining a global called `vars` that includes each of the variables we'll include in our summary statistics table. We're then running a t-test on each variable across the treatment and control groups. Next, we add the observation count for the treatment and control groups just like we did before. We then need to modify our `esttab` code so that the arguments in our `cell` command reflect the names that `ttest` uses (which are different than the names `tabstat` uses). We tell STATA to output two columns of means (one for the treatment group and one for the control group) and the p-value of the difference. The `(star)` option tells STATA that we want stars to represent statistical significance attached to the p-values. We then need to define our significance levels or else STATA will use the default `*p<0.05, **p<0.01, ***p<0.001`. Notice that I'm defining some pretty strange significance levels in this example. The reason is that there aren't any differences in summary statistics between the treatment and control group where `p<0.10`, so I'm bumping these up so that some stars will appear in the table. The last thing to notice is that we're using `collabels` now instead of `eqlabels`. That's again due to the change from `tabstat` to `ttest`. As a result, I dropped the `unstack` option, which is no longer needed. I also wanted to label the third column \"p-Value of Difference\", but that was too long for the cell size in LaTeX. So I used the `\\shortstack` command along with the double backslashes to add a line break in the column label.\n\nFinally, let's add some footnotes to explain to readers that we're using some strange values to denote statistical significance. \n\n*LaTeX*\n\nLike table titles, table notes are best added in LaTeX and not through STATA's `esttab` command. There are a few ways to do this, but I like to use the `threeparttable` package in LaTeX. Add the following to your LaTeX preamble:\n\n`\\usepackage[flushleft]{threeparttable}`\n\nAnd then include the following LaTeX code that adds a footnote to the summary statistics table:\n\n![](/img/tab_footnote.png){fig-alt=\"table_notes\"}\n\n*Word*\n\nFor Word tables, we can include the footnotes in the `esttab` command by using the `addnotes` option:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nrefcat(pop \"{\\i Demographic}\" death \"\\line {\\i Status}\", nolabel) ///\ncells(\"mu_1 mu_2 p(star)\") /// \nstar(* 0.50 ** 0.20 *** 0.10) ///\ntitle(\"Table 8: Summary statistics - Treat vs. Control, t-test\") /// \nnonumber nomtitle nonote noobs compress label nogaps ///\ncollabels(\"Treatment\" \"Control\" \"p-Value of Difference\") /// \nstats(treat_N control_N, layout(\"@ @\") labels(\"Observations\")) ///\naddnotes(\"{\\i Notes:} The treatment group includes Louisiana, Texas, Arkansas, and Mississippi. The control group includes all other states.\" \"{\\i *p<0.50, **p<0.20, ***p<0.10}\")\n```\n:::\n\n\nThat should give you most of the flexibility you'll need to export summary statistics tables directly from STATA to either LaTeX or Word. Now let's take a look at exporting regression tables.\n\n### Regression Tables\n\nRun the following STATA code that will load a data set and make some manipulations to the data:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nwebuse nlswork, clear\nxtset idcode year\ngen age2      = age^2\ngen ttl_exp2  = ttl_exp^2\ngen tenure2   = tenure^2\nlab var age      \"Age\"\nlab var age2     \"Age sq.\"\nlab var ttl_exp  \"Work experience\"\nlab var ttl_exp2 \"Work experience sq.\"\nlab var tenure   \"Job tenure\"\nlab var tenure2  \"Job tenure eq.\"\nlab var not_smsa \"SMSA (=1)\"\nlab var south    \"South (=1)\"\nlab var union    \"Union (=1)\"\n```\n:::\n\n\nNo we'll run a few basic regressions in STATA where the first specification regresses log wages on union status; the second specification adds controls for age, work experience, and job tenure; and the third specification adds controls for living in a rural area and living in the South census region:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nest clear\neststo: xtreg ln_w union\neststo: xtreg ln_w union age* ttl_exp* tenure*\neststo: xtreg ln_w union age* ttl_exp* tenure* not_smsa south\n```\n:::\n\n\nWe're using STATA's `eststo` command to store the regression results from each specification. We can use the following code to export a basic table to LaTeX and Word and then we'll add more elements to the table as we go:\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_9.tex\", replace  ///\nb(3) se(3) star(* 0.10 ** 0.05 *** 0.01) ///\nbooktabs nomtitle label\n```\n:::\n\n\nThis code should look familiar with one slight change from the previous table code we've been running. Here, instead of using the `%fmt` command to format the table estimates, I've used the simpler `b(#)` and `se(#)`. This tells STATA to export regression coefficients and standard errors at a number of decimal points equal to \"#\" (i.e., three decimal places in this case).\n\nYou can use the following LaTeX code to import the table into your document. Notice that I've added a title and table notes in LaTeX using the `caption` command and the `threeparttable` package.\n\n![](/img/tab1_reg.png){fig-alt=\"reg_table1\"}\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nb(3) se(3) star(* 0.10 ** 0.05 *** 0.01) ///\ntitle(\"Table 9: Regression Table - Basic\") /// \nnomtitle nonote compress label ///\naddnotes(\"{\\i Notes:} This is an example of a regression table where we estimate three different specifications adding controls as we go.\" \"{\\i *p<0.10, **p<0.05, ***p<0.01}\")\n```\n:::\n\n\nUnlike in LaTeX, when using Word I add the title and the table notes using the `esttab` command. The only other difference between the Word and LaTeX code is that I've dropped the `booktabs` option from the Word code since that's a LaTeX-specific option.\n\nThe data we're using for this example come from the NLSY, which is an individual-level panel data set. That means we can add both individual and time (year) fixed effects to our regression. Let's do that so we can see how to add rows to the bottom of the regression table that indicate our use of fixed effects. \n\nFirst, we need to re-run the regressions in STATA and create local values that store the fixed effects information.\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nest clear\neststo: xtreg ln_w union\nestadd local  TE  \"No\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure*\nestadd local  TE  \"No\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure* not_smsa south\nestadd local  TE  \"No\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure* not_smsa south i.year\nestadd local  TE  \"Yes\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure* not_smsa south i.year, fe\nestadd local  TE  \"Yes\"\nestadd local  FE  \"Yes\"\n```\n:::\n\n\nNow we can export the tables and add a row that provides information on which fixed effects we used in each specification.\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_10.tex\", replace   ///\nb(3) se(3) keep(union age* ttl_exp* tenure* not_smsa south) ///\nstar(* 0.10 ** 0.05 *** 0.01) ///\nbooktabs nomtitle nonote compress label ///\nscalars(\"TE Year fixed effects\" \"IE Individual fixed effects\") sfmt(2 0)\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append   ///\nb(3) se(3) keep(union age* ttl_exp* tenure* not_smsa south) ///\nstar(* 0.10 ** 0.05 *** 0.01) ///\ntitle(\"Table 10: Regression Table - FE\") /// \nnomtitle nonote compress label ///\nscalars(\"TE Year fixed effects\" \"FE Individual fixed effects\") ///\naddnotes(\"{\\i Notes:} This is an example of a regression table where we estimate three different specifications adding controls as we go.\" \"{\\i *p<0.10, **p<0.05, ***p<0.01}\")\n```\n:::\n\n\nThe `esttab` code is similar for exporting to LaTeX or Windows - we just need to drop the `booktabs` option and add the table title and notes when exporting to Word. \n\nThe table looks pretty good, but it would be nice if we had a row that included the mean of the dependent variable. I'd also like to move the row that contains the number of observations to the bottom of the table. Here's how we can make those changes. First, run the following code in STATA:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nest clear\neststo: xtreg ln_w union\nqui sum `e(depvar)' if e(sample)\nestadd scalar Mean= r(mean)\nestadd local  TE  \"No\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure*\nqui sum `e(depvar)' if e(sample)\nestadd scalar Mean= r(mean)\nestadd local  TE  \"No\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure* not_smsa south\nqui sum `e(depvar)' if e(sample)\nestadd scalar Mean= r(mean)\nestadd local  TE  \"No\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure* not_smsa south i.year\nqui sum `e(depvar)' if e(sample)\nestadd scalar Mean= r(mean)\nestadd local  TE  \"Yes\"\nestadd local  FE  \"No\"\n\neststo: xtreg ln_w union age* ttl_exp* tenure* not_smsa south i.year, fe\nqui sum `e(depvar)' if e(sample)\nestadd scalar Mean= r(mean)\nestadd local  TE  \"Yes\"\nestadd local  FE  \"Yes\"\n```\n:::\n\n\nHere we've added a command to display the mean value of the dependent variable after each regression and store that value as a scalar. Next, run the following code in either LaTeX or Word to output the table:\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_11.tex\", replace   ///\nb(3) se(3) keep(union age* ttl_exp* tenure* not_smsa south) ///\nstar(* 0.10 ** 0.05 *** 0.01) ///\nbooktabs nomtitle nonote noobs compress label ///\nscalars(\"TE Year fixed effects\" \"FE Individual fixed effects\" \"Mean \\vspace{0.01cm} \\\\ Dep. Var. Mean\" \"N Observations\") sfmt(0 0 2 %8.0fc)\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nb(3) se(3) keep(union age* ttl_exp* tenure* not_smsa south) ///\nstar(* 0.10 ** 0.05 *** 0.01) ///\ntitle(\"Table 11: Regression Table - FE\") /// \nnomtitle nonote noobs compress label ///\nscalars(\"TE Year fixed effects\" \"FE Individual fixed effects \\line\" \"Mean Dep. Var. Mean\" \"N Observations\") sfmt(0 0 2 %8.0fc) ///\naddnotes(\"{\\i Notes:} This is an example of a regression table where we estimate three different specifications adding controls as we go.\" \"{\\i *p<0.10, **p<0.05, ***p<0.01}\")\n```\n:::\n\n\nNote a couple of important changes here. First, we've added the `noobs` command so that the number of observations isn't automatically populated in the first row beneath the regression results. We still want the number of observations, but we want it in the bottom row of the table. To get that, we're including `N` as a scalar option and placing it at the end of the `scalars()` list so that it shows up in the bottom row. We're also adding the `sfmt` command that controls the formatting of the scalars. Without this command, they will display in the same format as the regression coefficient estimates.\n\nNow let's look at an example where we include regression output with different dependent variables in the same table. Suppose we have three dependent variables: log wages, usual weekly hours worked, and average weeks unemployed in the previous year, and we want to estimate a specification with and without time and person fixed effects for each outcome. Run the following STATA code:\n\n\n::: {.cell}\n\n```{.stata .cell-code}\nest clear\nforeach i of varlist ln_wage hours wks_ue {\n\teststo: xtreg `i' union age* ttl_exp* tenure* not_smsa south\n\tqui sum `e(depvar)' if e(sample)\n\testadd scalar Mean= r(mean)\n\testadd local  TE  \"No\"\n\testadd local  FE  \"No\"\n\t\n\teststo: xtreg `i' union age* ttl_exp* tenure* not_smsa south i.year, fe\n\tqui sum `e(depvar)' if e(sample)\n\testadd scalar Mean= r(mean)\n\testadd local  TE  \"Yes\"\n\testadd local  FE  \"Yes\"\n}\n```\n:::\n\n\nThis is pretty much the same code we ran for the last example table, only here I've created a `foreach` loop that loops through the three dependent variables. We can output the tables in LaTeX and Word as follows:\n\n*LaTeX*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/table_12.tex\", replace   ///\nb(3) se(3) keep(union age* ttl_exp* tenure* not_smsa south) ///\nstar(* 0.10 ** 0.05 *** 0.01) ///\nbooktabs nomtitle nonote noobs compress label ///\nmgroups(\"Ln(Wages)\" \"Hours worked\" \"Weeks unemployed\", pattern(1 0 1 0 1 0) /// \nprefix(\\multicolumn{@span}{c}{) suffix(}) span erepeat(\\cmidrule(lr){@span})) ///\nscalars(\"TE Year fixed effects\" \"FE Individual fixed effects\" \"Mean \\vspace{0.01cm} \\\\ Dep. Var. Mean\" \"N Observations\") sfmt(0 0 2 %8.0fc)\n```\n:::\n\n\n*Word*\n\n::: {.cell}\n\n```{.stata .cell-code}\nesttab using \"~/tables.rtf\", append ///\nb(3) se(3) keep(union age* ttl_exp* tenure* not_smsa south) ///\nstar(* 0.10 ** 0.05 *** 0.01) ///\ntitle(\"Table 12: Regression Table - Grouped\") /// \nnomtitle nonote noobs compress label ///\nmgroups(\"Ln(Wages)\" \"Hours worked\" \"Weeks unemployed\", pattern(1 0 1 0 1 0)) /// \nscalars(\"TE Year fixed effects\" \"FE Individual fixed effects \\line\" \"Mean Dep. Var. Mean\" \"N Observations\") sfmt(0 0 2 %8.0fc) ///\naddnotes(\"{\\i Notes:} This is an example of a regression table where we estimate three different specifications adding controls as we go.\" \"{\\i *p<0.10, **p<0.05, ***p<0.01}\")\n```\n:::\n\n\nNote that we've added the `mgroups` option to the output code. This option groups together regressions with the same dependent variable into adjacent columns and adds column titles. We've also added some LaTeX formatting language that centers the column titles and adds a solid line under each title. The LaTeX output code works great and gives us exactly what we want. The Word code isn't quite as good and so the table will require some manipulation when opened in Word (e.g., centering column titles).\n\nThis should cover most of the tables you'll need to create. Asjad Naqvi's \"[The Stata-to-LaTex guide](https://medium.com/p/6e7ed5622856)\" has a few other examples for rarely used cases. You can find some additional resources for exporting tables from STATA into LaTeX on Luke Stein's [GitHub repo](https://github.com/lukestein/stata-latex-workflows?source=post_page-----6e7ed5622856--------------------------------). ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}